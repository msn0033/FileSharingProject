@using Microsoft.AspNetCore.Localization;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.Extensions.Options;


@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> locOptions
@{
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = locOptions?.Value?.SupportedUICultures?
                       .Select(c => new SelectListItem { Text = c.NativeName, Value = c.Name });
}

<div title="@localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form method="post" asp-controller="CultureCurrent" asp-action="SetCulture" asp-route-returnUrl="@returnUrl">
    <select name="culture"
    onchange="this.form.submit();"
    //asp-for="@requestCulture.RequestCulture.UICulture.Name"
    //asp-items="cultureItems"
    >

            @foreach (var item in cultureItems.ToList())
            {

                bool isSelected = requestCulture.RequestCulture.UICulture.Name == @item.Value ? true : false;
                <option selected="@isSelected" value="@(item.Value)">
                @item.Text
                </option>
            }
    
    </select>
    </form>
</div>